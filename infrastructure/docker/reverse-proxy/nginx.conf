events {
    worker_connections 1024;
}

http {
    # # Define a default log format for better debugging
    # log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    #                 '$status $body_bytes_sent "$http_referer" '
    #                 '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log /var/log/nginx/access.log main;
    # error_log /var/log/nginx/error.log warn;

    # Global timeout settings
    keepalive_timeout 600;  # 10 minutes
    client_body_timeout 12; # 12 seconds

    # Health check server
    server {
        listen 80;
        server_name localhost;

        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
    }

    # Proxy server for service-a
    server {
        listen 31000;

        # Proxy to service-a (e.g., running on port 3000)
        location /v1/auth/ {
            proxy_pass http://host.docker.internal:3000;  # Direct proxy to service-a
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;

            # Intercept errors and handle them
            proxy_intercept_errors on;

            # Handle 502 (Bad Gateway) when service-a is down
            error_page 502 /error502.html;

            # Handle 503 (Service Unavailable)
            error_page 503 /error503.html;
        }

        # Proxy to service-a (e.g., running on port 3000)
        location /v1/logistics/ {
            proxy_pass http://host.docker.internal:3900;  # Direct proxy to service-a
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;

            # Intercept errors and handle them
            proxy_intercept_errors on;

            # Handle 502 (Bad Gateway) when service-a is down
            error_page 502 /error502.html;

            # Handle 503 (Service Unavailable)
            error_page 503 /error503.html;
        }        

        # Custom error pages
        location = /error502.html {
            internal;
            root /usr/share/nginx/html;
        }

        location = /error503.html {
            internal;
            root /usr/share/nginx/html;
        }
    }
}
